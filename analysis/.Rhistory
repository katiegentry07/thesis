knitr::opts_chunk$set( echo=TRUE, message=FALSE, warning=FALSE, fig.width=10 )
# Libraries
library( dplyr )       # data wrangling
library( knitr )
library( stargazer )
library( scales )
library( geojsonio )   # read shapefiles
# Libraries
library( dplyr )       # data wrangling
library( knitr )
library( stargazer )
library( scales )
library( geojsonio )   # read shapefiles
library( sp )          # work with shapefiles
library( sf )          # work with shapefiles - simple features format
library( mclust )      # cluster analysis
library( tmap )        # theme maps
library( ggplot2 )     # graphing
library( ggthemes )    # nice formats for ggplots
library( pander )      # formatting RMD tables
library( tidycensus )
library( cartogram )  # spatial maps w/ tract size bias reduction
library( maptools )   # spatial object manipulation
library(gridExtra)
library( here )
s.type <- "html"
# Load data
data_2000 <- readRDS( here("data/rodeo/LTDB-2000.rds" ))
data_2010 <- readRDS( here("data/rodeo/LTDB-2010.rds" ))
meta_data <- readRDS( here("data/rodeo/LTDB-META-DATA.rds" ))
data_2000 <- select( data_2000, - year )
data_2010 <- select( data_2010, - year )
# Merge 2000 and 2010 data and Metadata
merged_data <- merge( data_2000, data_2010, by="tractid" )
merged_data <- merge( merged_data, meta_data, by="tractid" )
# Filter for Urban cities
data_urban <- filter (merged_data, urban == "urban")
# Filter for Urban cities
data_urban <- filter (merged_data, urban.x == "urban")
# adjust 2000 home values for inflation
mhv.00 <- data_urban$mhmval00 * 1.28855
mhv.10 <- data_urban$mhmval12
# find Median Home Value change from 2000 to 2010
mhv.change <- mhv.10 - mhv.00
# Fliter out home values less than 10k
mhv.00[ mhv.00 < 1000 ] <- NA
pct.change <- 100 * ( mhv.change / mhv.00 )
#Add variables back into dataset
data_urban$mhv.00 <- mhv.00
data_urban$mhv.10 <- mhv.10
data_urban$mhv.change <- mhv.change
data_urban$pct.change <- pct.change
# Calculate new variables
data_urban <-
data_urban %>%
mutate(
# 2000 variables
p.white.00 = 100 * nhwht00 / pop00.x,
p.black.00 = 100 * nhblk00 / pop00.x,
p.hisp.00 = 100 * hisp00 / pop00.x,
p.asian.00 = 100 * asian00 / pop00.x,
p.col.edu.00 = 100 * col00 / ag25up00,
p.prof.00 = 100 * prof00 / empclf00,
p.unemp.00 = 100 * unemp00 / clf00,
pov.rate.00 = 100 * npov00 / dpov00,
p.rent.00 = 100 * rent00 / hu00,
# 2010 variables
p.white.10 = 100 * nhwht10 / pop10,
p.black.10 = 100 * nhblk10 / pop10,
p.hisp.10 = 100 * hisp10 / pop10,
p.asian.10 = 100 * asian10 / pop10,
p.col.edu.10 = 100 * col12 / ag25up12,
p.prof.10 = 100 * prof12 / empclf12,
p.unemp.10 = 100 * unemp12 / clf12,
pov.rate.10 = 100 * npov12 / dpov12,
p.rent.10 = 100 * rent10 / hu10 )
# inflation adjust income
data_urban$hinc00 <- 1.28855 * data_urban$hinc00
# Calculate new variables using "group_by"
data_urban <-
data_urban %>%
group_by( cbsaname.x ) %>%
mutate( metro.mhv.pct.00 = ntile( mhv.00, 100 ),
metro.mhv.pct.10 = ntile( mhv.10, 100 ),
metro.median.pay.00 = median( hinc00, na.rm=T ),
metro.median.pay.10 = median( hinc12, na.rm=T ),
metro.diversity.rank.00 = ntile( (100-p.white.00), 100 ),
# metro total population 2000
metro.pop.total.00 = sum( pop00.x, na.rm=T ),
# metro total population 2010
metro.pop.total.10 = sum( pop10, na.rm=T ),
# tract rank in metro area for unemployment in 2000
metro.unemp.rank.00 = ntile( p.unemp.00, 100 ),
# tract rank in metro area for unemployment in 2010
metro.unemp.rank.10 = ntile( p.unemp.10, 100 ) ) %>%
ungroup() %>%
mutate( metro.mhv.pctile.change = metro.mhv.pct.10 - metro.mhv.pct.00,
# metro population growth 2000-2010
metro.pop.growth =
( metro.pop.total.10 - metro.pop.total.00 ) / metro.pop.total.00,
metro.unemp.pctile.change = metro.unemp.rank.10 - metro.unemp.rank.00,
pay.change = metro.median.pay.10 - metro.median.pay.00,
race.change = p.white.10 - p.white.00,
pov.change = pov.rate.10 - pov.rate.00,
p.unemp.change = p.unemp.10 - p.unemp.00,
p.col.edu.change = p.col.edu.10 - p.col.edu.00,
p.rent.change = p.rent.10 - p.rent.00)
# Keep only variables we need
data_urban <-
data_urban %>%
select( c( "tractid", "cbsa", "cbsaname",
"mhv.00", "mhv.10", "mhv.change","pct.change",
"p.white.00", "p.black.00", "p.hisp.00", "p.asian.00",
"p.col.edu.00", "p.prof.00",  "p.unemp.00", "pov.rate.00",
"metro.mhv.pct.00", "metro.median.pay.00", "metro.pop.total.00",
"metro.unemp.pctile.change", "metro.unemp.rank.00",
"metro.pop.growth", "metro.mhv.pctile.change", "pay.change", "race.change",
"metro.diversity.rank.00", "pov.change", "p.unemp.change",
"p.col.edu.change", "p.rent.change"
#"metro.mhv.pct.10", "metro.median.pay.10", "metro.pop.total.10",
#"p.white.10", "p.black.10", "p.hisp.10", "p.asian.10",
#"p.hs.edu.10", "p.col.edu.10", "p.prof.10",
#"p.unemp.10", "pov.rate.10", "metro.unemp.rank.10"
) )
# Calculate new variables
data_urban <-
data_urban %>%
mutate(
# 2000 variables
p.white.00 = 100 * nhwht00 / pop00.x,
p.black.00 = 100 * nhblk00 / pop00.x,
p.hisp.00 = 100 * hisp00 / pop00.x,
p.asian.00 = 100 * asian00 / pop00.x,
p.col.edu.00 = 100 * col00 / ag25up00,
p.prof.00 = 100 * prof00 / empclf00,
p.unemp.00 = 100 * unemp00 / clf00,
pov.rate.00 = 100 * npov00 / dpov00,
p.rent.00 = 100 * rent00 / hu00,
# 2010 variables
p.white.10 = 100 * nhwht10 / pop10,
p.black.10 = 100 * nhblk10 / pop10,
p.hisp.10 = 100 * hisp10 / pop10,
p.asian.10 = 100 * asian10 / pop10,
p.col.edu.10 = 100 * col12 / ag25up12,
p.prof.10 = 100 * prof12 / empclf12,
p.unemp.10 = 100 * unemp12 / clf12,
pov.rate.10 = 100 * npov12 / dpov12,
p.rent.10 = 100 * rent10 / hu10 )
# inflation adjust income
data_urban$hinc00 <- 1.28855 * data_urban$hinc00
# Calculate new variables using "group_by"
data_urban <-
data_urban %>%
group_by( cbsaname.x ) %>%
mutate( metro.mhv.pct.00 = ntile( mhv.00, 100 ),
metro.mhv.pct.10 = ntile( mhv.10, 100 ),
metro.median.pay.00 = median( hinc00, na.rm=T ),
metro.median.pay.10 = median( hinc12, na.rm=T ),
metro.diversity.rank.00 = ntile( (100-p.white.00), 100 ),
# metro total population 2000
metro.pop.total.00 = sum( pop00.x, na.rm=T ),
# metro total population 2010
metro.pop.total.10 = sum( pop10, na.rm=T ),
# tract rank in metro area for unemployment in 2000
metro.unemp.rank.00 = ntile( p.unemp.00, 100 ),
# tract rank in metro area for unemployment in 2010
metro.unemp.rank.10 = ntile( p.unemp.10, 100 ) ) %>%
ungroup() %>%
mutate( metro.mhv.pctile.change = metro.mhv.pct.10 - metro.mhv.pct.00,
# metro population growth 2000-2010
metro.pop.growth =
( metro.pop.total.10 - metro.pop.total.00 ) / metro.pop.total.00,
metro.unemp.pctile.change = metro.unemp.rank.10 - metro.unemp.rank.00,
pay.change = metro.median.pay.10 - metro.median.pay.00,
race.change = p.white.10 - p.white.00,
pov.change = pov.rate.10 - pov.rate.00,
p.unemp.change = p.unemp.10 - p.unemp.00,
p.col.edu.change = p.col.edu.10 - p.col.edu.00,
p.rent.change = p.rent.10 - p.rent.00)
# Keep only variables we need
data_urban <-
data_urban %>%
select( c( "tractid", "cbsa.x", "cbsaname.x",
"mhv.00", "mhv.10", "mhv.change","pct.change",
"p.white.00", "p.black.00", "p.hisp.00", "p.asian.00",
"p.col.edu.00", "p.prof.00",  "p.unemp.00", "pov.rate.00",
"metro.mhv.pct.00", "metro.median.pay.00", "metro.pop.total.00",
"metro.unemp.pctile.change", "metro.unemp.rank.00",
"metro.pop.growth", "metro.mhv.pctile.change", "pay.change", "race.change",
"metro.diversity.rank.00", "pov.change", "p.unemp.change",
"p.col.edu.change", "p.rent.change"
#"metro.mhv.pct.10", "metro.median.pay.10", "metro.pop.total.10",
#"p.white.10", "p.black.10", "p.hisp.10", "p.asian.10",
#"p.hs.edu.10", "p.col.edu.10", "p.prof.10",
#"p.unemp.10", "pov.rate.10", "metro.unemp.rank.10"
) )
# Back up your data just in case
data_master <- data_urban
# education status
# unemployment
# poverty
# median income
# % renters
data_urban <- data_master
# proportion of college educated increased by 3 percent
less.uneducated <- data_urban$p.col.edu.change > 3
# proportion of unemployment decreased by 3 percent
less.unemployed <- data_urban$p.unemp.change > -3
# proportion of poverty decreased by 3 percent
less.poverty <- data_urban$pov.change > -3
# proportion of renters decreased
less.renters <- data_urban$p.rent.change < 0
# median income increased
more.money <- data_urban$pay.change > 0
# poverty in higher than normal rate
poor.2000 <- data_urban$pov.rate.00 > 9
# median income for metros less than normal rate
income.2000 <- data_urban$metro.median.pay.00 < 38586
# Create logic variables that signify what were looking for
poor.and.income <- poor.2000 & income.2000
g.flag <- poor.2000 & income.2000 & less.uneducated & less.poverty & less.unemployed & less.renters & more.money
# Create subsets of the candidates and the gnetrified tracts
data_cand <- data_urban[poor.and.income,]
data_gentrified <- data_urban[g.flag,]
# Add up how many candidates and how many gentirfied tracts
num.candidates <-  sum( poor.and.income, na.rm=T )
num.gentrified <- sum( g.flag, na.rm=T )
data_cand <- data.frame(data_cand)
stargazer( data_cand,
type=s.type,
digits=0,
summary.stat = c("min", "p25","median","mean","p75","max") )
# we have phoenix already packaged and on GitHub for easy load:
github.url <- "https://raw.githubusercontent.com/DS4PS/cpp-529-master/master/data/phx_dorling.geojson"
phx <- geojson_read( x=github.url,  what="sp" )
data_gentrified <- data.frame(data_gentrified)
stargazer( data_gentrified,
type=s.type,
digits=0,
summary.stat = c("min", "p25","median","mean","p75","max") )
data_gentrified <- data.frame(data_gentrified)
stargazer( data_gentrified,
type=s.type,
digits=0,
summary.stat = c("min", "p25","median","mean","p75","max") )
data_cand <- data.frame(data_cand)
stargazer( data_cand,
type=s.type,
digits=0,
summary.stat = c("min", "p25","median","mean","p75","max") )
# education status
# unemployment
# poverty
# median income
# % renters
data_urban <- data_master
# proportion of college educated increased by 3 percent
less.uneducated <- data_urban$p.col.edu.change > 3
# proportion of unemployment decreased by 3 percent
less.unemployed <- data_urban$p.unemp.change > -3
# proportion of poverty decreased by 3 percent
less.poverty <- data_urban$pov.change > -3
# proportion of renters decreased
less.renters <- data_urban$p.rent.change < 0
# median income increased
more.money <- data_urban$pay.change > 0
# poverty in higher than normal rate
poor.2000 <- data_urban$pov.rate.00 > 9
# median income for metros less than normal rate
income.2000 <- data_urban$metro.median.pay.00 < 38586
# Create logic variables that signify what were looking for
poor.and.income <- poor.2000 & income.2000
g.flag <- poor.2000 & income.2000 & less.uneducated & less.poverty & less.unemployed & less.renters & more.money
# Create subsets of the candidates and the gnetrified tracts
data_cand <- data_urban[poor.and.income,]
data_gentrified <- data_urban[g.flag,]
# Add up how many candidates and how many gentirfied tracts
num.candidates <-  sum( poor.and.income, na.rm=T )
num.gentrified <- sum( g.flag, na.rm=T )
# education status
# unemployment
# poverty
# median income
# % renters
data_urban <- data_master
# proportion of college educated increased by 3 percent
less.uneducated <- data_urban$p.col.edu.change > 3
# proportion of unemployment decreased by 3 percent
less.unemployed <- data_urban$p.unemp.change > -3
# proportion of poverty decreased by 3 percent
less.poverty <- data_urban$pov.change > -3
# proportion of renters decreased
less.renters <- data_urban$p.rent.change < 0
# median income increased
more.money <- data_urban$pay.change > 0
# poverty in higher than normal rate
poor.2000 <- data_urban$pov.rate.00 > 9
# median income for metros less than normal rate
income.2000 <- data_urban$metro.median.pay.00 < 38586
# Create logic variables that signify what were looking for
poor.and.income <- poor.2000 & income.2000
g.flag <- poor.2000 & income.2000 & less.uneducated & less.poverty & less.unemployed & less.renters & more.money
# Create subsets of the candidates and the gnetrified tracts
data_cand <- data_urban[poor.and.income,]
data_gentrified <- data_urban[g.flag,]
# Add up how many candidates and how many gentirfied tracts
num.candidates <-  sum( poor.and.income, na.rm=T )
num.gentrified <- sum( g.flag, na.rm=T )
g.flag
g.flag == TRUE
g.flag == "TRUE"
# education status
# unemployment
# poverty
# median income
# % renters
data_urban <- data_master
# proportion of college educated increased by 3 percent
less.uneducated <- data_urban$p.col.edu.change > 3
# proportion of unemployment decreased by 3 percent
less.unemployed <- data_urban$p.unemp.change > -3
# proportion of poverty decreased by 3 percent
less.poverty <- data_urban$pov.change > -3
# proportion of renters decreased
less.renters <- data_urban$p.rent.change < 0
# median income increased
more.money <- data_urban$pay.change > 0
# poverty in higher than normal rate
poor.2000 <- data_urban$pov.rate.00 > 9
# median income for metros less than normal rate
income.2000 <- data_urban$metro.median.pay.00 < 38586
# Create logic variables that signify what were looking for
poor.and.income <- poor.2000 & income.2000
g.flag <- poor.2000 & income.2000 & less.uneducated & less.poverty & less.unemployed & less.renters & more.money
# Create subsets of the candidates and the gnetrified tracts
data_cand <- data_urban[poor.and.income,]
data_gentrified <- data_urban[g.flag,]
# Add up how many candidates and how many gentirfied tracts
num.candidates <-  sum( poor.and.income, na.rm=T )
num.gentrified <- sum( g.flag, na.rm=T )
data_cand <- data.frame(data_cand)
stargazer( data_cand,
type=s.type,
digits=0,
summary.stat = c("min", "p25","median","mean","p75","max") )
data_gentrified <- data.frame(data_gentrified)
stargazer( data_gentrified,
type=s.type,
digits=0,
summary.stat = c("min", "p25","median","mean","p75","max") )
